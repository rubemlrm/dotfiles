---
- name: Setup ZSH
  become: true
  become_user: '{{ username }}'
  block:
    - name: Check if Oh MY ZSH is already installed
      ansible.builtin.stat:
        path: "{{ (home_dir , '.oh-my-zsh') | path_join }}"
      register: oh_my_zsh_installed
      changed_when: false
    - name: Install Oh MY ZSH
      ansible.builtin.raw: sh -c 'curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh'
      when: not oh_my_zsh_installed.stat.exists
      tags:
        - skip_ansible_lint
    - name: Install Oh My ZSH Plugins
      ansible.builtin.git:
        repo: "{{ item.repo }}"
        dest: "{{ (home_dir , item.dest) | path_join }}"
        version: "{{ item.version }}"
      with_items: "{{ dotfiles_zsh_plugins }}"
    - name: Link zsh themes
      ansible.builtin.file:
        src: "{{ (home_dir , '.config/zsh/themes/spaceship-prompt/spaceship.zsh-theme') | path_join }}"
        path: "{{ (home_dir, '.config/zsh/themes/spaceship.zsh-theme') | path_join }}"
        owner: "{{ username }}"
        group: "{{ user_group }}"
        mode: "0644"
        state: link
    - name: Clone cli utils
      ansible.builtin.git:
        repo: "{{ item.repo }}"
        dest: "{{ item.dest }}"
        version: "{{ item.version }}"
      with_items:
        - repo: 'https://github.com/junegunn/fzf.git'
          dest: "{{ (home_dir , '.fzf') | path_join }}"
          version: "0.53.0"
    - name: Setup fzf key bindings
      ansible.builtin.stat:
        path: "{{ (home_dir , '.fzf.zsh') | path_join }}"
      register: fzf_installed
      changed_when: false
    - name: Install FZF
      ansible.builtin.raw: sh -c 'bash {{ (home_dir , '.fzf/install') | path_join }} --key-bindings --completion --update-rc'
      when: not fzf_installed.stat.exists
      tags:
        - skip_ansible_lint

    - name: Remove oh my zshrc file
      ansible.builtin.file:
        path: "{{ ( home_dir , '.zshrc') | path_join }}"
        state: absent
      when: not oh_my_zsh_installed.stat.exists

    - name: Restore zsh settings
      ansible.builtin.file:
        src: "{{ ( dotfiles_location, 'files/zsh/',  item.name ) | path_join }}"
        dest: "{{ (home_dir, item.name) | path_join }}"
        owner: "{{ username }}"
        group: "{{ user_group }}"
        mode: "{{ item.mode }}"
        force: "{{ use_force }}"
        state: link
      with_items:
        - name: ".config/zsh/alias"
          mode: "0755"
        - name: ".config/zsh/functions"
          mode: "0755"
        - name: ".config/zsh/alias.zsh"
          mode: "0644"
        - name: ".config/zsh/functions.zsh"
          mode: "0644"
        - name: ".zshrc"
          mode: "0644"

    - name: Restore neofetch settings
      ansible.builtin.file:
        src: "{{ (dotfiles_location, 'files/neofetch/') | path_join }}"
        path: "{{ (home_dir, '.config/neofetch') | path_join }}"
        owner: "{{ username }}"
        group: "{{ user_group }}"
        force: "{{ use_force }}"
        mode: "0755"
        state: link

    - name: Create tmux dir
      ansible.builtin.file: # noqa template-instead-of-copy
        dest: "{{ (home_dir , '.tmux/') | path_join }}"
        mode: '0755'
        state: "directory"

    - name: Restore tmux settings
      ansible.builtin.file:
        src: "{{ ( dotfiles_location , 'files/tmux/',  item.name) | path_join }}"
        path: "{{ (home_dir , item.name) | path_join }}"
        owner: "{{ username }}"
        group: "{{ user_group }}"
        mode: "{{ item.mode }}"
        force: "{{ use_force }}"
        state: link
      with_items:
        - name: ".tmux.conf"
          mode: "0644"
        - name: ".tmux/development"
          mode: "0755"

    - name: Create temp public file
      ansible.builtin.copy: # noqa template-instead-of-copy
        dest: "{{ (home_dir , '.config/zsh/alias/host_alias.zsh') | path_join }}"
        content: "{{ host_zsh_alias }}"
        mode: '0644'
      when: host_zsh_alias is defined


    - name: Restore nvim settings
      ansible.builtin.file:
        src: "{{ (dotfiles_location , 'files/nvim/.config/nvim') | path_join }}"
        dest: "{{ (home_dir , '.config/nvim') | path_join }}"
        owner: "{{ username }}"
        group: "{{ user_group }}"
        force: "{{ use_force }}"
        state: "link"
        mode: "0755"

    - name: Restore npm settings
      ansible.builtin.file:
        src: "{{ (dotfiles_location , 'files/npm/.npmrc') | path_join }}"
        dest: "{{ (home_dir , '.npmrc') | path_join }}"
        owner: "{{ username }}"
        group: "{{ user_group }}"
        force: "{{ use_force }}"
        state: "link"
        mode: "0755"

    - name: Restore stow settings
      ansible.builtin.file:
        src: "{{ (dotfiles_location , 'files/stow/.stow-global-ignore') | path_join }}"
        dest: "{{ (home_dir, '.stow-global-ignore') | path_join }}"
        owner: "{{ username }}"
        group: "{{ user_group }}"
        force: "{{ use_force }}"
        state: "link"
        mode: "0755"

    - name: Restore Alacritty settings
      ansible.builtin.file:
        src: "{{ (dotfiles_location , 'files/alacritty/.config/alacritty') | path_join }}"
        dest: "{{ (home_dir , '.config/alacritty') | path_join }}"
        owner: "{{ username }}"
        group: "{{ user_group }}"
        force: "{{ use_force }}"
        mode: "0755"
        state: "link"

- name: Restore Gui Settings
  when: use_desktop is true and  ansible_facts['distribution'] == "Fedora"
  block:
    - name: Create wallpapers directory
      ansible.builtin.file:
        path: "{{ (home_dir ,'Pictures/wallpapers/') | path_join }}"
        state: directory
        owner: "{{ username }}"
        force: "{{ use_force }}"
        mode: "0755"


    - name: Restore Terminator settings
      ansible.builtin.file:
        src: "{{ (dotfiles_location ,'files/terminator') | path_join }}"
        dest: "{{ ( home_dir , '.config/terminator') | path_join }}"
        owner: "{{ username }}"
        group: "{{ user_group }}"
        force: "{{ use_force }}"
        mode: "0755"
        state: "link"

    - name: Restore i3 settings
      ansible.builtin.file:
        src: "{{ (dotfiles_location , 'files/i3') | path_join }}"
        dest: "{{ (home_dir, '.config/i3') | path_join }}"
        owner: "{{ username }}"
        group: "{{ user_group }}"
        force: "{{ use_force }}"
        mode: "0755"
        state: "link"

    - name: Restore polybar settings
      ansible.builtin.file:
        src: "{{ (dotfiles_location, 'files/polybar/') | path_join }}"
        dest: "{{ (home_dir , '.config/polybar') | path_join }}"
        owner: "{{ username }}"
        group: "{{ user_group }}"
        force: "{{ use_force }}"
        mode: "0755"
        state: "link"

    - name: Restore rofi settings
      ansible.builtin.file:
        src: "{{ (dotfiles_location,  'files/rofi') | path_join }}"
        dest: "{{ (home_dir, '.config/rofi') | path_join }}"
        owner: "{{ username }}"
        group: "{{ user_group }}"
        force: "{{ use_force }}"
        mode: "0755"
        state: "link"

    - name: Restore picom settings
      ansible.builtin.file:
        src: "{{ (dotfiles_location , 'files/picom/picom.conf') | path_join }}"
        dest: "{{ (home_dir , '.config/picom.conf') | path_join }}"
        owner: "{{ username }}"
        group: "{{ user_group }}"
        force: "{{ use_force }}"
        mode: "0644"
        state: "link"

    - name: Restore dunst settings
      ansible.builtin.file:
        src: "{{ ( dotfiles_location , 'files/dunst') | path_join }}"
        dest: "{{ (home_dir , '.config/dunst') | path_join }}"
        owner: "{{ username }}"
        group: "{{ user_group }}"
        force: "{{ use_force }}"
        mode: "0755"
        state: "link"

    - name: Restore gtk settings
      ansible.builtin.file:
        src: "{{ (dotfiles_location , 'files/', item) | path_join }}"
        dest: "{{ ( home_dir , '.config',  item ) | path_join }}"
        owner: "{{ username }}"
        group: "{{ user_group }}"
        force: "{{ use_force }}"
        mode: "0755"
        state: "link"
      with_items:
        - gtk-3.0
        - gtk-4.0

    - name: Restore solaar settings
      ansible.builtin.file:
        src: "{{ ( dotfiles_location , 'files/solaar') | path_join }}"
        dest: "{{ ( home_dir , '.config/solaar') | path_join }}"
        owner: "{{ username }}"
        group: "{{ user_group }}"
        force: "{{ use_force }}"
        mode: "0755"
        state: "link"
